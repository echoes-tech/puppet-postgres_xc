#!/bin/bash

DAEMONUSER="<%= @super_user %>"
GTM_PROXY_DIRECTORY="<%= @home %>/<%= @gtm_proxy_directory %>"
DATANODE_DIRECTORY="<%= @home %>/<%= @datanode_directory %>"
COORDINATOR_DIRECTORY="<%= @home %>/<%= @coordinator_directory %>"
DATANODE_SLAVE_DIRECTORY="<%= @home %>/<%= @datanode_slave_directory %>"

gtm_port=<%= @gtm_port %>
gtm_hostname=<%= @gtm_hostname %>
gtm_standby_hostname=<%= @gtm_standby_hostname %>
gtm_proxy_configfile="<%= @home %>/<%= @gtm_proxy_directory %>/gtm_proxy.conf"
script_gtm_proxy_name="reconnect_gtm_proxy.sh"
script_datanode_name="promote_datanode.sh"

reconfigure_gtm_proxy() {
sed -i -e "s/gtm_host\ =\ '$gtm_hostname'/gtm_host\ =\ '$gtm_standby_hostname'/" $gtm_proxy_configfile
}

# Change conf file to switch gtm
# wait_gtm function detects if gtm_proxy have to switch from gtm1 to gtm2
# In this case, gtm2 isn't use as standby but as primary GTM because gtm1 didn't start
#
wait_gtm() {
echo "Looking for gtm up..."
continue=1
try=0
while [ $continue -eq 1 ]
do
  port_status=`nmap $gtm_hostname -p$gtm_port | grep $gtm_port | cut -d" " -f2`
  try=$(($try + 1))
  if [ $port_status == 'open' ]
  then
    continue=0
    echo "GTM is up."
  else
    # On test alors gtm standby savoir si il a pris le role du gtm
    if [ $try -gt 5 ]; then
      port_status=`nmap $gtm_standby_hostname -p$gtm_port | grep $gtm_port | cut -d" " -f2`
      
      if [ $port_status == 'open' ]; then
        continue=0
        echo "GTM standby took place of GTM. So I can start with him !"
        reconfigure_gtm_proxy
      fi
    fi
  fi
  sleep 0.5
done
}

do_start() {
echo "Starting GTM-proxy..."
rm <%= @home %>/<%= @gtm_proxy_directory %>/register.node
sudo -u $DAEMONUSER gtm_ctl start -Z gtm_proxy -D $GTM_PROXY_DIRECTORY
if [ $? -eq 1 ]; then
  pkill gtm_proxy
  sudo -u $DAEMONUSER gtm_ctl start -Z gtm_proxy -D $GTM_PROXY_DIRECTORY
fi
echo "Starting datanode..."
sudo -u $DAEMONUSER pg_ctl start -Z datanode -D $DATANODE_DIRECTORY
echo "Starting coordinator..."
sudo -u $DAEMONUSER pg_ctl start -Z coordinator -D $COORDINATOR_DIRECTORY
sudo -u $DAEMONUSER .<%= @home %>/$script_gtm_proxy_name &
sudo -u $DAEMONUSER pg_ctl start -Z datanode -D $DATANODE_SLAVE_DIRECTORY
}

do_stop () {
sudo -u $DAEMONUSER pg_ctl stop -Z coordinator -D $COORDINATOR_DIRECTORY
sudo -u $DAEMONUSER pg_ctl stop -Z datanode -D $DATANODE_DIRECTORY
sudo -u $DAEMONUSER gtm_ctl stop -Z gtm_proxy -D $GTM_PROXY_DIRECTORY
sudo -u $DAEMONUSER pg_ctl stop -Z datanode -D $DATANODE_SLAVE_DIRECTORY
ps aux | grep $script_gtm_proxy_name | awk '{ print $2 }' | xargs kill -9
ps aux | grep $script_datanode_name | awk '{ print $2 }' | xargs kill -9
}

do_force_stop () {
sudo -u $DAEMONUSER pg_ctl stop -Z coordinator -D $COORDINATOR_DIRECTORY -m immediate &
sleep 0.2
sudo -u $DAEMONUSER pg_ctl stop -Z datanode -D $DATANODE_DIRECTORY -m immediate &
sleep 0.2
sudo -u $DAEMONUSER gtm_ctl stop -Z gtm_proxy -D $GTM_PROXY_DIRECTORY -m immediate &
sleep 0.2
sudo -u $DAEMONUSER pg_ctl stop -Z datanode -D $DATANODE_SLAVE_DIRECTORY -m immediate &
ps aux | grep $script_gtm_proxy_name | awk '{ print $2 }' | xargs kill -9
ps aux | grep $script_datanode_name | awk '{ print $2 }' | xargs kill -9
}

case "$1" in
  start)
    wait_gtm 
    do_start
    ;;
  stop)
    do_stop
    ;;
  restart)
    do_stop
    do_start
    ;;
  force-stop)
    do_force_stop
    ;;
  *)
    echo "Usage : $0 {start|stop|restart|force-stop}"
esac
